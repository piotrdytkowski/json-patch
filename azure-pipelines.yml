# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- checkout: self
  persistCredentials: true
  displayName: "git credentials"
- script: |
    git checkout $(Build.SourceBranchName)
    git config --global user.name "Azure DevOps"
  displayName: "git config"
- task: MavenAuthenticate@0
  displayName: 'authenticate maven'
  inputs:
    artifactsFeeds: bt
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'clean test'
  displayName: 'Gradle build and test'
- task: Gradle@2
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    tasks: 'clean release -Prelease.useAutomaticVersion=true'
  displayName: 'Gradle release and publish artifacts'
- task: PublishPipelineArtifact@1
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    targetPath: $(System.DefaultWorkingDirectory)/build/libs/
  displayName: "publish build artifact"
